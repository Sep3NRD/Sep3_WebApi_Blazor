@page "/CreateItem"
@using Domain.DTOs
@using Domain.Models
@using HttpClients.ClientInterfaces
@using IItemService = Blazor.Services.Interfaces.IItemService
@inject IItemService itemService
@inject NavigationManager navMgr

<div class="card">
    <h3>Create a new Item.</h3>
    <div class="field">
        <label>Item name:</label>
        <input type="text" @bind="ItemName" />
    </div>
    <div class="field">
        <label style="text-align: center">Category:</label>
        <select @bind="ItemCategory">
        <option value="">Select Category</option>
                <option value="CPU">CPU</option>
            <option value="Motherboard">Motherboard</option>
            <option value="RAM">RAM</option>
            <option value="CPU Cooler">CPU Cooler</option>
            <option value="SSD">SSD</option>
            <option value="HDD">HDD</option>
            <option value="PSU">PSU</option>
            <option value="Case">Case</option>
        </select>
       
    </div>
    <div class="field">
        <label style="text-align: center">Description:</label>
        <input type="text" @bind="ItemDescription" />
    </div>
    <div class="field">
        <label style="text-align: center">Price:</label>
        <input type="text" @bind="ItemPrice" />
    </div>
    <div class="field">
            <label style="text-align: center">Stock:</label>
            <input type="text" @bind="ItemStock" />
        </div>
    @if (!string.IsNullOrEmpty(msg))
    {
        <div class="field">
            <label style="color: red">
                @msg
            </label>
        </div>
    }

    <div class="field">
        <button class="createbtn" @onclick="Create">Create</button>
    </div>
</div>


@code {
    
    private string ItemName = "";
    private string? ItemDescription = "";
    private string? ItemCategory = "";
    private double ItemPrice;
    private int ItemStock = 0;
    string msg = "";

    private async Task Create()
    {
        
        if (string.IsNullOrEmpty(ItemName))
        {
            msg = "Name cannot be empty!";
            return;
        }
        if (ItemPrice == null)
        {
            msg = "Price cannot be empty!";
            return;
        }

        try
        {
            Item item = new(ItemName, ItemDescription, 
                ItemCategory, ItemPrice, ItemStock);
            await itemService.CreateAsync(item);
           
            
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
}