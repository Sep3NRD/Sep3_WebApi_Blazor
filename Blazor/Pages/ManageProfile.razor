@page "/ManageProfile"
@using Domain.Models
@using Blazor.Services
@using Domain.DTOs
@using System.Security.Claims
@using System.Security.Cryptography
@inject ICustomerService customerService;
@inject IAuthService authService;


@if (customer != null)
{
    <div class="container rounded bg-white">
        <div class="row">
            <div class="col-md-3 border-right">
                <div class="p-3 py-1">
                    <div class="d-flex justify-content-between align-items-center mb-1">
                        <h4 class="text-right">Profile Settings</h4>
                    </div>
                    <div class="row mt-2">
                        <div class="col-md-12">
                            <label class="labels">Name</label>
                            <input type="text" class="form-control-md" placeholder="First name" value="@customer?.FirstName">
                        </div>
                        <div class="col-md-12">
                            <label class="labels">Surname</label>
                            <input type="text" class="form-control-md" placeholder="Surname" value="@customer?.LastName">
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-md-12">
                            <label class="labels">Street</label>
                            <input type="text" class="form-control-md" placeholder="Enter address" value="@customer?.Address.Street">
                        </div>
                        <div class="col-md-12">
                            <label class="labels">Door No.</label>
                            <input type="text" class="form-control-md" placeholder="Enter Door Number" value="@customer?.Address.DoorNumber">
                        </div>
                    </div>
                    <div class="row mt-12">
                        <div class="col-md-6">
                            <label class="labels">ZIP</label>
                            <input type="text" class="form-control-md" placeholder="Enter Postal Code" value="@customer?.Address.PostalCode">
                        </div>
                        <div class="col-md-12">
                            <label class="labels">City</label>
                            <input type="text" class="form-control-md" placeholder="Enter City" value="@customer?.Address.City">
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-md-12">
                            <label class="labels">Country</label>
                            <input type="text" class="form-control-md" placeholder="Country" value="@customer?.Address.Country">
                        </div>
                        <div class="col-md-12">
                            <label class="labels">State/Region</label>
                            <input type="text" class="form-control-md" placeholder="State" value="@customer?.Address.State">
                        </div>
                    </div>
                    <div class="mt-5 text-center">
                        <button class="btn btn-primary profile-button" type="button">Save Profile</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private Customer customer=null;
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;
    private IEnumerable<Claim>? userClaims;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            AuthenticationState authState = await AuthState;
            ClaimsPrincipal user = authState.User;
            userClaims = user?.Claims;  // Perform null check
            Claim username = userClaims?.FirstOrDefault(c => c.Type == ClaimTypes.Name);

            if (username != null)
            {
                CustomerLoginDto dto = new CustomerLoginDto(username.Value, "");
                customer = await customerService.GetByUsernameAsync(dto);
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }


}